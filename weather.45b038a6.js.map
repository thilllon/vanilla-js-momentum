{"version":3,"sources":["weather.js"],"names":["API_KEY","LS_COORDS","weather","document","querySelector","saveCoords","coords","localStorage","setItem","JSON","stringify","handleGeoSuccess","position","latitude","longitude","String","handleGeoError","err","console","info","askForCoords","navigator","geolocation","getCurrentPosition","getWeather","lat","lon","url","fetch","then","response","json","list","name","temp","main","innerText","catch","rej","loadCoords","loadedCoords","getItem","parse","init"],"mappings":";AAAA,IAAMA,EAAU,GACVC,EAAY,SACZC,EAAUC,SAASC,cAAc,eAEjCC,EAAa,SAACC,GAClBC,aAAaC,QAAQP,EAAWQ,KAAKC,UAAUJ,KAG3CK,EAAmB,SAACC,GACQA,IAAAA,EAAAA,EAASN,OAAjCO,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAClBT,EAAW,CAAEQ,SAAUE,OAAOF,GAAWC,UAAWC,OAAOD,MAGvDE,EAAiB,SAACC,GACtBC,QAAQC,KAAKF,IAGTG,EAAe,WACnBC,UAAUC,YAAYC,mBAAmBZ,EAAkBK,IAGvDQ,EAAa,SAACC,EAAKC,GAEnBC,IAAAA,EAA0DF,oDAAAA,OAAAA,EAAWC,SAAAA,OAAAA,EAAa1B,WAAAA,OAAAA,EAAtF,iBACA4B,MAAMD,GACHE,KAAK,SAACC,GACEA,OAAAA,EAASC,SAEjBF,KAAK,SAACE,GAIDA,IAAAA,EAAAA,EAAKC,KAAK,GAFZC,EAAAA,EAAAA,KACQC,EAARC,EAAAA,KAAQD,KAEVhC,EAAQkC,UAAeF,GAAAA,OAAAA,EAASD,MAAAA,OAAAA,KAEjCI,MAAM,SAACC,GACNpB,QAAQC,KAAKmB,MAIbC,EAAa,WACXC,IAAAA,EAAejC,aAAakC,QAAQxC,GACtC,GAACuC,EAEE,CAC2B/B,IAAAA,EAAAA,KAAKiC,MAAMF,GAAnC3B,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAElBU,EAAWX,EAAUC,QAJrBM,KAQEuB,EAAO,WACXJ,KAGFI","file":"weather.45b038a6.js","sourceRoot":"..\\src","sourcesContent":["const API_KEY = ''; // enter issued API KEY\r\nconst LS_COORDS = 'coords';\r\nconst weather = document.querySelector('.js-weather');\r\n\r\nconst saveCoords = (coords) => {\r\n  localStorage.setItem(LS_COORDS, JSON.stringify(coords));\r\n};\r\n\r\nconst handleGeoSuccess = (position) => {\r\n  const { latitude, longitude } = position.coords;\r\n  saveCoords({ latitude: String(latitude), longitude: String(longitude) });\r\n};\r\n\r\nconst handleGeoError = (err) => {\r\n  console.info(err);\r\n};\r\n\r\nconst askForCoords = () => {\r\n  navigator.geolocation.getCurrentPosition(handleGeoSuccess, handleGeoError);\r\n};\r\n\r\nconst getWeather = (lat, lon) => {\r\n  // let url = `http://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\r\n  let url = `https://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\r\n  fetch(url)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((json) => {\r\n      const {\r\n        name,\r\n        main: { temp },\r\n      } = json.list[0];\r\n      weather.innerText = `${temp} @${name}`;\r\n    })\r\n    .catch((rej) => {\r\n      console.info(rej);\r\n    });\r\n};\r\n\r\nconst loadCoords = () => {\r\n  const loadedCoords = localStorage.getItem(LS_COORDS);\r\n  if (!loadedCoords) {\r\n    askForCoords();\r\n  } else {\r\n    const { latitude, longitude } = JSON.parse(loadedCoords);\r\n    //   console.log(latitude, longitude);\r\n    getWeather(latitude, longitude);\r\n  }\r\n};\r\n\r\nconst init = () => {\r\n  loadCoords();\r\n};\r\n\r\ninit();\r\n"]}