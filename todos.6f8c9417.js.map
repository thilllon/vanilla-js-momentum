{"version":3,"sources":["todos.js"],"names":["toDoForm","document","querySelector","toDoInput","toDoList","toDoClearButton","toDos","idx","LS_toDos","handleSubmit","event","preventDefault","text","value","split","join","length","toDoObj","id","paintToDo","push","updateToDoList","handleClear","loadToDoList","handleDelete","button","li","target","parentNode","removeChild","currentId","parentElement","filter","elem","createElement","deleteButton","span","innerText","type","addEventListener","appendChild","localStorage","setItem","JSON","stringify","loadedToDos","getItem","parse","firstElementChild","forEach","init"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,cAAc,gBAClCC,EAAYH,EAASE,cAAc,SACnCE,EAAWJ,EAASE,cAAc,MAClCG,EAAkBL,EAASE,cAAc,gBAE3CI,EAAQ,GACRC,EAAM,EACJC,EAAW,QAEXC,EAAe,SAACC,GACpBA,EAAMC,iBACFC,IAAAA,EAAOT,EAAUU,MACjBD,GAAAA,EAAKE,MAAM,KAAKC,KAAK,IAAIC,OAAS,EAAG,CAEjCC,IAAAA,EAAU,CACdC,GAAW,OAAA,SAAEX,GACbK,KAAMA,GAERO,EAAUF,GACVX,EAAMc,KAAKH,GACXI,IACAlB,EAAUU,MAAQ,KAIhBS,EAAc,SAACZ,GACnBA,EAAMC,iBACNL,EAAQ,GACRe,IACAE,KAGIC,EAAe,SAACd,GACde,IACAC,EADShB,EAAMiB,OACHC,WAClBF,EAAGE,WAAWC,YAAYH,GACpBI,IAAAA,EAAYpB,EAAMiB,OAAOI,cAAcb,GAC7CZ,EAAQA,EAAM0B,OAAO,SAACC,GAASA,OAAAA,EAAKf,KAAOY,IAC3CT,KAGIF,EAAY,SAAkB,GAAfD,IAAAA,EAAAA,EAAAA,GAAIN,EAAAA,EAAAA,KACjBc,EAAKzB,SAASiC,cAAc,MAC5BC,EAAelC,SAASiC,cAAc,UACtCE,EAAOnC,SAASiC,cAAc,QACtB5B,EAAMU,OACpBmB,EAAaE,UAAY,IACzBF,EAAaG,KAAO,SACpBH,EAAaI,iBAAiB,QAASf,GACvCY,EAAKC,UAAYzB,EACjBc,EAAGR,GAAKA,EACRQ,EAAGc,YAAYL,GACfT,EAAGc,YAAYJ,GACfhC,EAASoC,YAAYd,IAGjBL,EAAiB,WACrBoB,aAAaC,QAAQlC,EAAUmC,KAAKC,UAAUtC,KAI1CiB,EAAe,WAEbsB,IAAAA,EAAcJ,aAAaK,QAAQtC,GAGlCJ,IAFHyC,IAAavC,EAAQqC,KAAKI,MAAMF,IAE7BzC,EAAS4C,mBAAmB5C,EAASyB,YAAYzB,EAAS4C,mBACjE1C,EAAM2C,QAAQ,SAAA,GAAG/B,IAAAA,EAAAA,EAAAA,GAAIN,EAAAA,EAAAA,KAAWO,OAAAA,EAAU,CAAED,GAAAA,EAAIN,KAAAA,OAG5CsC,EAAO,WACX3B,IACAvB,EAASuC,iBAAiB,SAAU9B,GACpCJ,EAAgBkC,iBAAiB,QAASjB,IAG5C4B","file":"todos.6f8c9417.js","sourceRoot":"..\\src","sourcesContent":["const toDoForm = document.querySelector('.js-toDoForm');\r\nconst toDoInput = toDoForm.querySelector('input');\r\nconst toDoList = toDoForm.querySelector('ul');\r\nconst toDoClearButton = toDoForm.querySelector('#clearButton');\r\n\r\nlet toDos = [];\r\nlet idx = 0;\r\nconst LS_toDos = 'toDos';\r\n\r\nconst handleSubmit = (event) => {\r\n  event.preventDefault();\r\n  let text = toDoInput.value;\r\n  if (text.split(' ').join('').length > 0) {\r\n    // console.info();\r\n    const toDoObj = {\r\n      id: `item${++idx}`,\r\n      text: text,\r\n    };\r\n    paintToDo(toDoObj);\r\n    toDos.push(toDoObj);\r\n    updateToDoList();\r\n    toDoInput.value = '';\r\n  }\r\n};\r\n\r\nconst handleClear = (event) => {\r\n  event.preventDefault();\r\n  toDos = [];\r\n  updateToDoList();\r\n  loadToDoList();\r\n};\r\n\r\nconst handleDelete = (event) => {\r\n  const button = event.target;\r\n  const li = button.parentNode;\r\n  li.parentNode.removeChild(li);\r\n  const currentId = event.target.parentElement.id;\r\n  toDos = toDos.filter((elem) => elem.id !== currentId);\r\n  updateToDoList();\r\n};\r\n\r\nconst paintToDo = ({ id, text }) => {\r\n  const li = document.createElement('li');\r\n  const deleteButton = document.createElement('button');\r\n  const span = document.createElement('span');\r\n  const newId = toDos.length + 1;\r\n  deleteButton.innerText = 'Ã—';\r\n  deleteButton.type = 'button';\r\n  deleteButton.addEventListener('click', handleDelete);\r\n  span.innerText = text;\r\n  li.id = id;\r\n  li.appendChild(deleteButton);\r\n  li.appendChild(span);\r\n  toDoList.appendChild(li);\r\n};\r\n\r\nconst updateToDoList = () => {\r\n  localStorage.setItem(LS_toDos, JSON.stringify(toDos));\r\n  // console.info(localStorage.getItem(LS_toDos));\r\n};\r\n\r\nconst loadToDoList = () => {\r\n  // data\r\n  const loadedToDos = localStorage.getItem(LS_toDos);\r\n  if (loadedToDos) toDos = JSON.parse(loadedToDos);\r\n  // representation\r\n  while (toDoList.firstElementChild) toDoList.removeChild(toDoList.firstElementChild);\r\n  toDos.forEach(({ id, text }) => paintToDo({ id, text }));\r\n};\r\n\r\nconst init = () => {\r\n  loadToDoList();\r\n  toDoForm.addEventListener('submit', handleSubmit);\r\n  toDoClearButton.addEventListener('click', handleClear);\r\n};\r\n\r\ninit();\r\n"]}